speed.pl syntax OK

Test test43_subset1_addresses (seq 1 5 | speed.pl '$d') - passed
Test test44_subset1_addresses (seq 0 10 100 | speed.pl '$p') - passed
Test test45_subset1_addresses (seq 1 10000 | speed.pl -n '$p') - passed
Test test46_subset1_addresses (speed.pl -n '$p' < dictionary.txt) - passed
Test test47_subset1_addresses (seq 42 44 | speed.pl 2,3d) - passed
Test test48_subset1_addresses (seq 10 21 | speed.pl 3,/2/d) - passed
Test test49_subset1_addresses (seq 10 21 | speed.pl /2/,7d) - passed
Test test50_subset1_addresses (seq 10 21 | speed.pl /2/,/7/d) - passed
Test test51_subset1_addresses (seq 10 21 | speed.pl '/1$/,/^2/d') - passed
Test test52_subset1_addresses (seq 10 30 | speed.pl '/4/,/6/s/[12]/9/') - passed
Test test53_subset1_addresses (seq 0 10 200 | speed.pl '/4/,/6/s/0/-/g') - passed
Test test54_subset1_addresses (seq 10 40 | speed.pl '/2/,4p') - passed
Test test55_subset1_substitute (seq 1 5 | speed.pl 'sX[15]XzzzX') - passed
Test test56_subset1_substitute (seq 1 5 | speed.pl 's?[15]?zzz?') - passed
Test test57_subset1_substitute (seq 1 5 | speed.pl 's_[15]_zzz_') - passed
Test test58_subset1_substitute (seq 1 5 | speed.pl 'sX[15]Xz/z/zX') - passed
Test test59_subset1_multiple_commands (seq 1 5 | speed.pl '4q;/2/d') - passed
Test test60_subset1_multiple_commands (seq 1 5 | speed.pl '/2/d;4q') - passed
Test test61_subset1_multiple_commands (seq 1 10 | speed.pl '5d;5q') - failed (Incorrect output)
Your program produced these 4 lines of output:
1
2
3
4

The correct 9 lines of output for this test were:
1
2
3
4
6
7
8
9
10

The difference between your output(-) and the correct output(+) is:
...
  4
+ 6
+ 7
+ 8
+ 9
+ 10
You can reproduce this test by executing these commands:
  seq 1 10 | speed.pl '5d
  5q'
Test test62_subset1_multiple_commands (seq 1 20 | speed.pl '/2$/,/8$/d;4,6p') - passed
Test test63_subset1_multiple_commands (seq 1 100 | speed.pl -n '1,/.1/p;/5/,/9/s/.//;/.{2}/,/.9/p;85q') - passed
Test test64_subset1_multiple_commands (seq 1 13 | speed.pl '/2/p;s/2/*/') - passed
Test test65_subset1_multiple_commands (seq 1 13 | speed.pl 's/2/*/;/2/p') - passed
Test test66_subset1_-f (echo '4q' > commandsFile; seq 1 5 | speed.pl -f commandsFile) - passed
Test test67_subset1_-f (echo '$q' > commandsFile; seq 1 5 | speed.pl -f commandsFile) - failed (errors)
Your program produced these errors:
speed: command line: invalid command
You can reproduce this test by executing these commands:
  echo '$q' > commandsFile
  seq 1 5 | speed.pl -f commandsFile
Test test68_subset1_-f (echo '$q;/2/d' > commandsFile; seq 1 5 | speed.pl -f commandsFile) - failed (errors)
Your program produced these errors:
speed: command line: invalid command
You can reproduce this test by executing these commands:
  echo '$q
  /2/d' > commandsFile
  seq 1 5 | speed.pl -f commandsFile
Test test69_subset1_-f (echo 4q    > commandsFile; echo /2/d >> commandsFile; seq 1 5 | speed.pl -f commandsFile) - passed
Test test70_subset1_-f (echo /2/d > commandsFile; echo 4q  >> commandsFile; seq 1 5 | speed.pl -f commandsFile) - passed
Test test71_subset1_-f (echo '1,/.1/p;/5/,/9/s/.//' > commandsFile; echo '/.{2}/,/.9/p;85q'    >> commandsFile; seq 1 100 | speed.pl -n -f commandsFile) - passed
Test test72_subset1_input_files (seq 1 2 > two.txt; seq 1 5 > five.txt; speed.pl '4q;/2/d' two.txt five.txt) - passed
Test test73_subset1_input_files (seq 1 2 > two.txt; seq 1 5 > five.txt; speed.pl '4q;/2/d' five.txt two.txt) - passed
Test test74_subset1_input_files (seq 1 2 > two.txt; seq 1 5 > five.txt; speed.pl '/2/d;4q' two.txt five.txt) - failed (Incorrect output)
Your program produced these 2 lines of output:
1
1

The correct 5 lines of output for this test were:
1
1
3
4
5

The difference between your output(-) and the correct output(+) is:
...
  1
+ 3
+ 4
+ 5
You can reproduce this test by executing these commands:
  seq 1 2 > two.txt
  seq 1 5 > five.txt
  speed.pl '/2/d
  4q' two.txt five.txt
Test test75_subset1_input_files (seq 1 2 > two.txt; seq 1 5 > five.txt; speed.pl -f commandsFile five.txt two.txt) - passed
Test test76_subset1_input_files (echo 4q    > commandsFile; echo /2/d >> commandsFile; seq 1 2    > two.txt; seq 1 5    > five.txt; speed.pl -f commandsFile two.txt five.txt) - passed
Test test77_subset1_input_files (echo /2/d > commandsFile; echo 4q  >> commandsFile; seq 1 2   > two.txt; seq 1 5   > five.txt; speed.pl -f commandsFile two.txt five.txt) - failed (Incorrect output)
Your program produced these 2 lines of output:
1
1

The correct 5 lines of output for this test were:
1
1
3
4
5

The difference between your output(-) and the correct output(+) is:
...
  1
+ 3
+ 4
+ 5
You can reproduce this test by executing these commands:
  echo /2/d > commandsFile
  echo 4q  >> commandsFile
  seq 1 2   > two.txt
  seq 1 5   > five.txt
  speed.pl -f commandsFile two.txt five.txt
Test test78_subset1_input_files (speed.pl -n '10p;$p' dictionary.txt) - passed
Test test79_subset1_whitespace (seq 24 42 | speed.pl ' 3, 17  d  # comment') - passed
Test test80_subset1_whitespace (seq 24 43 | speed.pl '/2/d # delete  ;  4  q # quit') - failed (No output produced)
Your program produced no output
You can reproduce this test by executing these commands:
  seq 24 43 | speed.pl '/2/d # delete
  4  q # quit'
Test test81_subset1_whitespace (seq 10 21 | speed.pl '  /1$/  ,   /^2/    d # comment') - passed
Test test82_subset1_whitespace (echo '/2/    d # comment' > commandsFile; echo '# comment'         >> commandsFile; echo '4    q'            >> commandsFile; seq 1 2   > two.txt; seq 1 5   > five.txt; speed.pl -f commandsFile two.txt five.txt) - failed (errors)
Your program produced these errors:
speed: command line: invalid command
You can reproduce this test by executing these commands:
  echo '/2/    d # comment' > commandsFile
  echo '# comment'         >> commandsFile
  echo '4    q'            >> commandsFile
  seq 1 2   > two.txt
  seq 1 5   > five.txt
  speed.pl -f commandsFile two.txt five.txt
33 tests passed 7 tests failed
